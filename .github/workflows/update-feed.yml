name: Update Feed

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  fetch-rfc:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/${{ github.repository }}:master
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: read
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}

    steps:
      - name: Run crawling and DB update
        run: php bin/console app:fetch-rfcs
        working-directory: /app

      - name: Upload updated database
        uses: actions/upload-artifact@v4
        with:
          name: production-db
          path: /app/data/production.db

      - name: Check for database changes
        id: check_changes
        run: |
          # Compare with a reference database to detect changes
          # This is a simplified check - in practice you might want to compare with the previous version
          if [ -f /app/data/production.db ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          fi

  update-db:
    runs-on: ubuntu-latest
    needs: fetch-rfc
    if: needs.fetch-rfc.outputs.has_changes == 'true'

    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
    
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}

      - name: Download updated database
        uses: actions/download-artifact@v4
        with:
          name: production-db
          path: data/

      - name: Check for actual database changes
        id: check_real_changes
        run: |
          if git diff --quiet data/production.db; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Pull Request for DB updates
        if: steps.check_real_changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/production.db
          git commit -m "Update RFC database with latest changes"
          git push

  update-rfc-feed:
    runs-on: ubuntu-latest
    needs: fetch-rfc
    container: 
      image: ghcr.io/${{ github.repository }}:master
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      pages: write
      id-token: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download updated database
        uses: actions/download-artifact@v4
        with:
          name: production-db
          path: /tmp/

      - name: Copy production database
        run: cp /tmp/production.db /app/data/production.db

      - name: Create dist directory
        run: mkdir -p /app/dist

      - name: Generate feed
        run: php bin/console rfc:generate-feed -o dist/feed.xml
        working-directory: /app

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: /app/dist

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
